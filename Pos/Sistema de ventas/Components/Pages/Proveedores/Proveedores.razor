@page "/proveedor/editar/{Id:int}"
@inject NavigationManager Nav
@inject Contexto ctx
@using Microsoft.EntityFrameworkCore
@using POS.Api.Data;
@using POS.Api.Modelos;



<PageTitle>Proveedor</PageTitle>

<div class="container" style="font-weight: bold;">
<div class="mt-3">
<h4 class="pt-3 mb-5" style="font-weight: bold;">Proveedores</h4>
</div>
    

    <EditForm Model="@proveedor" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row mb-4">
            <div class="col">
                <label for="name" class="form-label">Proveedor</label>
                <InputText id="name" class="form-control" @bind-Value="@proveedor.Name" />
            </div>
            <div class="col">
                <label for="FechaCompra" class="form-label">Fecha</label>
                <InputDate id="FechaCompra" class="form-control" @bind-Value="@proveedor.FechaRegisro" />
            </div>
        </div>

        <div class="text-center mb-3">
            <button type="submit" class="btn btn-success">Guardar</button>
        </div>
    </EditForm>
<br>

</div>

@code {
    [Parameter] public int Id { get; set; }

    Proveedor proveedor = new Proveedor();

    protected async Task Guardar()
    {
        if (proveedor.Id > 0)
        {
            ctx.ProveedorsDB.Update(proveedor);
        }
        else
        {
            ctx.ProveedorsDB.Add(proveedor);
        }

        await ctx.SaveChangesAsync();
        proveedor = new Proveedor();
        StateHasChanged();

    }

    protected override void OnInitialized()
    {
        if (Id != 0)
        {
            proveedor = ctx.ProveedorsDB.Find(Id) ?? new Proveedor();
        }
    }
}

<style>
    .container form input{
        border: solid #000 1px;
    }
</style>
