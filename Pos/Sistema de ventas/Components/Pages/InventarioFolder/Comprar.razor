@page "/inventarioForm"
@page "/inventarioForm/{Id:int}"
@inject NavigationManager Nav
@using Microsoft.EntityFrameworkCore
@inject IJSRuntime jsx
@using P.Final.Components.Modelos.Response
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json

<style>
    .container h3 {
        font-weight: bold;
    }

    .container {
        font-weight: bold;
    }

        .container form input {
            border: solid #000 1px;
        }

        .container form select {
            border: solid #000 1px;
        }
</style>

<PageTitle>Inventario</PageTitle>

<div class="container">

    <h3 class="mt-3 pt-3 mb-3">Agregar nuevo</h3>

    <EditForm Model="@oInventario" OnValidSubmit="() => Guardar(oInventario.ProvedorId)">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row mb-3">
            <div class="col">
                <label for="Proveedor" class="form-label">Proveedor:</label>
                <select id="Name" @bind="oInventario.ProvedorId" class="form-control">
                    @foreach (var pr in oProveedors)
                    {
                        <option value="@pr.Id">@pr.Name</option>
                    }
                </select>
            </div>


        </div>


        <div class="row mb-3">
            <div class="col">
                <label for="Stock" class="form-label">Producto</label>
                <InputText id="Stock" class="form-control" @bind-Value="@oInventario.Name" />
            </div>
            <div class="col">
                <label for="Stock" class="form-label">Stock</label>
                <InputNumber id="Stock" class="form-control" @bind-Value="@oInventario.Stock" />
            </div>
        </div>

        <div class="form-group mt-3 mb-3">
            <label for="estado">Estado:</label>
            <select @bind="oInventario.Estado" class="form-control">
                @foreach (var estado in Enum.GetValues(typeof(InventoryDto.Estados)))
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="Fechav" class="form-label">Fecha de Vencimiento</label>
                <InputDate id="Fechav" class="form-control" @bind-Value="@oInventario.FechaCaducidad" />
            </div>
            <div class="col">
                <label for="Fechav" class="form-label">Fecha de compra</label>
                <InputDate id="Fechav" class="form-control" @bind-Value="@oInventario.Fecha" />
            </div>

        </div>
        <div class="row mb-3">
            <div class="col">
                <label for="price" class="form-label">Precio</label>
                <InputNumber id="price" class="form-control" @bind-Value="@oInventario.BasePrice" />
            </div>
            <div class="col">
                <label for="desc" class="form-label">Descripcion</label>
                <InputText id="desc" class="form-control" @bind-Value="@oInventario.Description" />
            </div>
        </div>


        <div class="text-center mb-3">
            <button type="submit" class="btn btn-success">Guardar</button>
        </div>
    </EditForm>
    <br/>
</div>

@code {

    [Parameter]public int Id { get; set; }

    public Response<InventoryDto> oResponseInventoryDto = new Response<InventoryDto>();
    InventoryDto oInventario = new InventoryDto();

    public Response<object> oResponse = new Response<object>();

    public string Url = "/api/Inventario";

    List<ProveedorDto> oProveedors = new List<ProveedorDto>();


    protected async Task Guardar(int id)
    {

        if(Id!= 0){
            var response = await Http.PutAsJsonAsync<InventoryDto>(Url, oInventario);
            oResponse = response.Content.ReadFromJsonAsync<Response<object>>().Result;
        }
        else{
            var response = await Http.PostAsJsonAsync<InventoryDto>(Url, oInventario);
            oResponse = response.Content.ReadFromJsonAsync<Response<object>>().Result;
        }
        

        Nav.NavigateTo("/inventario");

        //---------------
        // var _proveedor = await ctx.ProveedorsDB
        //     .Where(i => i.Id == id)
        //     .FirstOrDefaultAsync();

        // if (_proveedor != null)
        // {

        //     _proveedor.IngresosProveedor = inventario.BasePrice;
        //     _proveedor.ProductosComprados = inventario.Stock;
        //     _proveedor.FechaVenta = inventario.Fecha;
        //     ctx.ProveedorsDB.Update(_proveedor);

        // }   
       
    }

    protected override async Task OnInitializedAsync()
    {

        if (Id != 0)
        {
            oResponseInventoryDto = await Http.GetFromJsonAsync<Response<InventoryDto>>(Url + "/" + Id);
            oInventario = oResponseInventoryDto.Data;
        }

    }

}



