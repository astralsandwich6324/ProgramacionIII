@page "/ver_ventas"
@inject NavigationManager Nav
@inject Contexto ctx
@using Microsoft.EntityFrameworkCore
@inject EstadoCompartido Estado
@inject IJSRuntime jsx
@using POS.Api.Data;
@using POS.Api.Modelos;

<PageTitle>Inventario</PageTitle>

<div class="container">
    <div class="row mt-3">
<h3 class="col">Ventas</h3>
    <div class="text-end mb-3 mt-3 col">
        <button  style="all:unset" @onclick="AgregarNuevo"><i class="bi bi-plus-square-fill" style="font-size: 30px; color:#055D5E;"></i></button>
    </div>
    </div>
    

    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Productos</th>
                <th scope="col">Cantidad</th>
                <th scope="col">FechaVenta</th>
                <th scope="col">Precio venta</th>
                <th scope="col">Descripcion</th>
                <th scope="col">Acciones</th>
                <th scope="col"><i class="bi bi-receipt" style="color: #f25d0e; font-size: 25px;"></i></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var items in ListaVentas)
            {

                <tr>
                    <td>@items.Id

                    </td>
                    <td>@items.Inventory.Name</td>
                    <td>@items.Cantidad</td>
                    <td>@items.FechaVenta</td>
                    <td>@items.SalePrice</td>
                    <td>@items.Description</td>
                    <td>
                        <button style="all:unset;" @onclick="() => Editar(items.Id)" ><i class="bi bi-pencil-square" style="color:#fa8b0b; font-size: 20px;"></i></button>
                        <button style="all:unset;" @onclick="() => Borrar(items.Id)" ><i class="bi bi-trash3-fill" style="color:red; font-size: 20px;"></i></button>
                    </td>
                    <td>
                        <a style="text-decoration: none;"
                        @onclick="()=> Export(items.Id)"><i class="bi bi-plus-square-fill" style="color: #055D5E; font-size: 15px;"></i></a></td>
                </tr>
            }
        </tbody>
    </table>

</div>

@code {
    List<Sells> ListaVentas = new List<Sells>();

    private int link; 

    async Task Export(int id){

        Estado.valor = id;
        Nav.NavigateTo("ventasReport");
    }

    private void AgregarNuevo()
    {
        Nav.NavigateTo("/ventas/editar/0");
    }

    public void Editar(int id)
    {
        Nav.NavigateTo($"/ventas/editar/{id}");
    }

    

    protected override void OnInitialized()
    {
        ListaVentas = ctx.VentasDB.ToList();
    }

    protected async Task Borrar(int id)
    {
        var listaVentas = await ctx.VentasDB.FindAsync(id);
        if (listaVentas != null)
        {
            ctx.VentasDB.Remove(listaVentas);
            ListaVentas.Remove(listaVentas);

            await ctx.SaveChangesAsync();
            StateHasChanged();
        }
    }
}


<style>
    .container h3{
    margin-top:10px;
    font-weight: bold;
}
</style>