@page "/Compras"
@inject NavigationManager Nav
@inject Contexto ctx
@using Microsoft.EntityFrameworkCore
@using POS.Api.Data;
@using POS.Api.Modelos;

<PageTitle>Compras</PageTitle>

<div class="container">
    <div class="row mt-3">
    <h3 class="mt-3 col" style="font-weight: bold;">Compras</h3>
    <div class="text-end mb-3 mt-3 col">
        <button style="all:unset;" @onclick="AgregarNuevo"><i class="bi bi-plus-square-fill" style="color:#055D5E; font-size: 30px;"></i></button>
    </div>
    </div>
    

    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">ID</th>
                @* <th scope="col">Proveedor</th> *@
                <th scope="col">Producto:</th>
                <th scope="col">Fecha</th>
                <th scope="col">Fechav</th>
                <th scope="col">Precio</th>
                <th scope="col">Descripcion</th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var items in productos)
            {
                
                <tr>
                    <td>@items.Id</td>
                    @* <td>@items.Proveedor.Name</td> *@
                    <td>@items.Name</td>
                    <td>@items.Fecha</td>
                    <td>@items.FechaCaducidad</td>
                    <td>@items.BasePrice</td>
                    <td>@items.Description</td>
                    <td>
                        <button style="all: unset;" @onclick="() => Editar(items.Id)" ><i class="bi bi-pencil-square" style="color:#fa8b0b; font-size: 20px;"></i></button>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

@code {
    List<Inventory> productos = new List<Inventory>();

    Inventory inventario = new Inventory();

    public string? Signal;

    private void AgregarNuevo()
    {
        Nav.NavigateTo("/inventario/editar/0");
    }

    public void Editar(int id)
    {
        Nav.NavigateTo($"/inventario/editar/{id}");
    }

    protected override void OnInitialized()
    {
        //   productos = ctx.InventoryDB
        // .Include(p => p.Proveedor) 
        // .ToList();

        productos = ctx.InventoryDB.ToList();
    }

    // void filtrar(){
    //     inventario = productos.W
    // }

    /*protected async Task Borrar(int id)
    {
        var producto = await ctx.InventoryDB.FindAsync(id);
        if (producto != null)
        {
            ctx.InventoryDB.Remove(producto);
            productos.Remove(producto);

            await ctx.SaveChangesAsync();
            StateHasChanged();
        }
    }*/

    

}
