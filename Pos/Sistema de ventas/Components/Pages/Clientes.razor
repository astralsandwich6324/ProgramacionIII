@page "/clientes"
@inject NavigationManager Nav
@rendermode InteractiveServer
@inject Contexto ctx
@inject IJSRuntime js
@using Microsoft.EntityFrameworkCore
@using POS.Api.Data;
@using POS.Api.Modelos;

<PageTitle>Clientes</PageTitle>

<div class="container">

    <div class="row mt-3">
<h4 class="mt-3">Clientes</h4>

    <div class="text-end mb-3">
        <button class="btn btn-secondary" @onclick="() => Agregar()">Agregar</button>
    </div>
    </div>
    
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Cedula</th>
                @* <th>Tipo</th> *@
            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in listausuarios)
            {
                <tr>
                    <td>@usuario.Id</td>
                    <td>@usuario.Nombre</td>
                    <td>@usuario.Cedula</td>
                    @* <td>@usuario.Tipo</td> *@
                    <td>
                        <div class="text-center mb-3">
                            <div class="row">
                                <button style="all:unset;" @onclick="() => Editar(usuario.Id)"><i class="bi bi-pencil-square" style="color:#fa8b0b; font-size: 20px;"></i></button>
                            </div>
                            <div class="row">
                                <button style="all:unset;" @onclick="() => Borrar(usuario.Id)"><i class="bi bi-trash3-fill" style="color:red; font-size: 20px;"></i></button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

</div>

@code {
   
    List<Users> listausuarios = new List<Users>();

    Users usuario = new Users();

    void Agregar(){
        Nav.NavigateTo("/clientes/Editar/0");
    }


    protected async Task Borrar(int id)
    {
        var usuarios = await ctx.UsuarioDb.FindAsync(id);
        if (usuarios != null)
        {
            ctx.UsuarioDb.Remove(usuarios);
            listausuarios.Remove(usuarios);

            await ctx.SaveChangesAsync();
            StateHasChanged();
        }
    }

    public void Editar(int id)
    {
        Nav.NavigateTo($"/clientes/Editar/{id}");
    }

    protected override async Task OnAfterRenderAsync(bool render)
    {
        listausuarios = await ctx.UsuarioDb.ToListAsync();
        
    }
}


